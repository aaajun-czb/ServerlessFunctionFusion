/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * user guide available at https://docs.gradle.org/4.8.1/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'application'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'com.google.guava:guava:23.0'
    implementation 'com.squareup.okhttp3:okhttp:3.10.0'
    implementation 'com.squareup.okio:okio:1.14.1'
    implementation 'org.json:json:20210307'

    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'

    implementation 'com.sun.net.httpserver:http:20070405'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.10.0'
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

// Define the main class for the application
mainClassName = 'com.openfaas.function.proxy.Proxy'

jar {
    manifest { // 设置jar包的主类
        attributes(
                'Main-Class': 'com.openfaas.function.proxy.Proxy'
        )
    }
    from { // 将依赖的jar包打包到生成的jar包中
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}